//
//  PrefixHeader.pch
//  iOS-Learning-Demo
//
//  Created by yuan on 2019/2/22.
//  Copyright © 2019 yuan. All rights reserved.
//

#pragma mark - *********** BaseHeader ***********

#import "YSBase.h"

#pragma mark - *********** PodHeader ***********

#import "SDAutoLayout.h"
#import "YYModel.h"
#import "SDAutoLayout.h"
#import "ReactiveObjC.h"

#pragma mark - *********** Tool ***********

#define SCREEN_WIDTH    [UIScreen mainScreen].bounds.size.width
#define SCREEN_HEIGHT   [UIScreen mainScreen].bounds.size.height

static inline void showAlertWithTitle(NSString *title){
    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"" message:title delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
    [alertView show];
}

#pragma mark - *********** UIColor ***********

#define UIColorViewBG UIColorFromRGB(0xF6F7F9)

#define UIColorFromRGB(rgbValue)    [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0F blue:((float)(rgbValue & 0xFF))/255.0F alpha:1.0]

#define random(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)/255.0]
#define UIColorRandom random(arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256))

#define DEVICE_SYSTEM_VERSION_  [[[UIDevice currentDevice] systemVersion] floatValue]
#define IS_IOS_VERSION_11 ((DEVICE_SYSTEM_VERSION_ >= 11.0)?(YES):(NO))

#pragma mark - *********** Tool ***********

//TODO:创建纯色图片
static inline UIImage * createImageWithColor(UIColor *color,float width,float height){
    CGRect rect = CGRectMake(0.0f,0.0f,width,height);
    UIGraphicsBeginImageContext(rect.size);
    CGContextRef context = UIGraphicsGetCurrentContext();
    CGContextSetFillColorWithColor(context, [color CGColor]);
    CGContextFillRect(context, rect);
    UIImage *theImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    return theImage;
}

#ifndef weakify
#if DEBUG
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#else
#if __has_feature(objc_arc)
#define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
#endif
#endif
#endif

#ifndef strongify
#if DEBUG
#if __has_feature(objc_arc)
#define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
#endif
#else
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
#endif
#endif
#endif
